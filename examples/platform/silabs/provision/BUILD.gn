# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/efr32_sdk.gni")
import("${efr32_sdk_build_root}/SiWx917_sdk.gni")
import("${efr32_sdk_build_root}/silabs_board.gni")

silabs_common_plat_dir = "${chip_root}/examples/platform/silabs"

config("provision-config") {
  include_dirs = [ "${chip_root}" ]

  defines = [ "CHIP_DEVICE_CONFIG_ENABLE_EXAMPLE_CREDENTIALS=1" ]
  if (use_provision_channel) {
    defines += [ "SL_PROVISION_CHANNEL_ENABLED=1" ]
  }
}

source_set("provision-common") {
  sources = [
    "${silabs_common_plat_dir}/provision/AttestationKey.h",
    "${silabs_common_plat_dir}/provision/ProvisionChannel.h",
    "${silabs_common_plat_dir}/provision/ProvisionEncoder.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionEncoder.h",
    "${silabs_common_plat_dir}/provision/ProvisionManager.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionManager.h",
    "${silabs_common_plat_dir}/provision/ProvisionProtocol.h",
    "${silabs_common_plat_dir}/provision/ProvisionProtocolV2.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionStorage.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionStorage.h",
    "${silabs_common_plat_dir}/provision/ProvisionStorageCustom.cpp",
  ]

  public_deps = [
    "${chip_root}/src/credentials",
    "${chip_root}/src/platform:platform_base",
    "${chip_root}/src/setup_payload:setup_payload",
  ]

  public_configs = [ ":provision-config" ]
}

source_set("provision-flash-only") {
  sources = [
    "${silabs_common_plat_dir}/provision/AttestationKeyMbed.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionStorageFlash.cpp",
  ]

  public_deps = [ ":provision-common" ]
}

static_library("provision-efr32") {
  sources = [
    "${silabs_common_plat_dir}/provision/AttestationKeyPSA.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionChannelEFR32BLE.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionStorageDefault.cpp",
  ]

  public_deps = [ ":provision-common" ]
}

static_library("provision-siwx917") {
  sources = [
    "${silabs_common_plat_dir}/provision/ProvisionChannelSi917BLE.cpp",
    "${silabs_common_plat_dir}/provision/ProvisionStorageDefault.cpp",
  ]

  if (sl_si91x_crypto_flavor == "tinycrypt") {
    sources += [ "${silabs_common_plat_dir}/provision/AttestationKeyMbed.cpp" ]
  }

  if (sl_si91x_crypto_flavor == "psa") {
    sources += [ "${silabs_common_plat_dir}/provision/AttestationKeyPSA.cpp" ]
  }

  public_deps = [ ":provision-common" ]
}
