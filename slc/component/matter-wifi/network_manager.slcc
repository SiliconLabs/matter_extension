id: network_manager
package: matter
description: >
  The Network Manager (SL Net) provides an API to manage network interfaces and their behaviour
label: Network Manager
category: Matter-WiFi|Network Management
quality: production
metadata:
  sbom:
    license: Zlib AND Apache-2.0
provides:
- name: network_manager
source:
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/src/sl_net_basic_certificate_store.c
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/src/sl_net.c
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/si91x/sl_net_si91x.c
  condition: ["sl_si91x_internal_stack"]
# Use copied and modified file until the next wiseconnect patch
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/src/sl_net_for_lwip.c
  condition: ["sl_si91x_lwip_stack"]
include:
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/inc
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/inc
  file_list:
    - path: sl_net_constants.h
    - path: sl_net_dns.h
    - path: sl_net_ip_types.h
    - path: sl_net_types.h
    - path: sl_net_wifi_types.h
    - path: sl_net.h
- path: slc/component/sdk-content/wifi-sdk/components/service/network_manager/inc
  file_list:
    - path: sl_net_for_lwip.h
  condition:
    - sl_si91x_lwip_stack

define:
- name: SL_NET_COMPONENT_INCLUDED

- {"name":"__STATIC_INLINE","value":"static inline"}
requires:
- name: wifi
- name: network_config_manager
- name: credential_manager

recommends:
- id: "%extension-wiseconnect3_sdk%basic_network_config_manager"

template_contribution:
- name: console_headers
  value: 'sl_net_constants.h'
- name: console_enums
  value:
    credential_id:
      wifi_client: SL_NET_DEFAULT_WIFI_CLIENT_CREDENTIAL_ID
      wifi_ap: SL_NET_DEFAULT_WIFI_AP_CREDENTIAL_ID
      wifi_eap_client: SL_NET_WIFI_EAP_CLIENT_CREDENTIAL_ID
      wifi_eap_server: SL_NET_WIFI_EAP_SERVER_CREDENTIAL_ID
      tls_client: SL_NET_TLS_CLIENT_CREDENTIAL_START
      tls_server: SL_NET_TLS_SERVER_CREDENTIAL_START
      mqtt_server: SL_NET_MQTT_SERVER_CREDENTIAL_START
      mqtt_client: SL_NET_MQTT_CLIENT_CREDENTIAL_START
      http_server: SL_NET_HTTP_SERVER_CREDENTIAL_START
      http_client: SL_NET_HTTP_CLIENT_CREDENTIAL_START
      user: SL_NET_USER_CREDENTIAL_ID
    cert_type:
      client_cert: SL_NET_CERTIFICATE
      puiblic_key: SL_NET_PUBLIC_KEY
      private_key: SL_NET_PRIVATE_KEY
      ca_cert: SL_NET_SIGNING_CERTIFICATE
      http_client: SL_NET_HTTP_CLIENT_CREDENTIAL
      eap_client: SL_NET_EAP_CLIENT_CREDENTIAL
      mqtt_client: SL_NET_MQTT_CLIENT_CREDENTIAL
    sl_net_dns_resolution_ip_type_t:
      ipv4: SL_NET_DNS_TYPE_IPV4
      ipv6: SL_NET_DNS_TYPE_IPV6