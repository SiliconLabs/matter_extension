# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_facade",
    "pw_cc_library",
    "pw_cc_test",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_facade(
    name = "pw_tls_client_facade",
    hdrs = [
        "public/pw_tls_client/options.h",
        "public/pw_tls_client/session.h",
        "public/pw_tls_client/status.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_assert",
        "//pw_bytes",
        "//pw_result",
        "//pw_status",
        "//pw_stream",
    ],
)

pw_cc_library(
    name = "pw_tls_client",
    deps = [":pw_tls_client_facade"],
)

# TODO(zyecheng): Add a "backend_multiplexer" target once BoringSSL/MbedTLS is
# ready.

pw_cc_facade(
    name = "entropy_facade",
    hdrs = [
        "public/pw_tls_client/entropy.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_bytes",
        "//pw_status",
    ],
)

pw_cc_library(
    name = "fake_entropy",
    srcs = ["fake_entropy.cc"],
    deps = [
        ":entropy_facade",
        "//pw_log",
    ],
)

# TODO(zyecheng): The target requires a build_time.h header that defines a
# 'constexpr size_t kBuildTimeMicrosecondsUTC' variable for storing the build time.
# In gn build, this is generated by a python action target. Need to figure out a
# solution in bazel build.
pw_cc_library(
    name = "build_time",
    srcs = [
        "build_time.cc",
    ],
    # TODO(b/257527057): Get this to build.
    tags = ["manual"],
)

pw_cc_library(
    name = "crlset",
    hdrs = ["public/pw_tls_client/crlset.h"],
    includes = ["public"],
    deps = [
        "//pw_bytes",
    ],
)

pw_cc_library(
    name = "test_server",
    srcs = ["test_server.cc"],
    hdrs = ["public/pw_tls_client/test/test_server.h"],
    includes = ["public"],
    # TODO(b/257527057): Get this to build.
    tags = ["manual"],
    deps = [
        "//pw_bytes",
        "//pw_log",
        "//pw_preprocessor",
        "//pw_result",
        "//pw_stream",
    ],
)

pw_cc_test(
    name = "test_server_test",
    srcs = ["test_server_test.cc"],
    # TODO(b/257527057): Get this to build.
    tags = ["manual"],
    deps = [":test_server"],
)
