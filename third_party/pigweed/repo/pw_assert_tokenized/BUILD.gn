# Copyright 2022 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_docgen/docs.gni")
import("$dir_pw_unit_test/test.gni")

declare_args() {
  pw_assert_tokenized_HANDLER_BACKEND = "$dir_pw_assert_tokenized:log_handler"
}

config("public_include_path") {
  include_dirs = [ "public" ]
  visibility = [ ":*" ]
}

config("assert_backend_config") {
  include_dirs = [ "assert_public_overrides" ]
  visibility = [ ":*" ]
}

config("check_backend_config") {
  include_dirs = [ "check_public_overrides" ]
  visibility = [ ":*" ]
}

pw_source_set("handler") {
  public_configs = [ ":public_include_path" ]
  public_deps = [ "$dir_pw_preprocessor" ]
  public = [ "public/pw_assert_tokenized/handler.h" ]
}

pw_source_set("assert_backend") {
  public_configs = [
    ":public_include_path",
    ":assert_backend_config",
  ]
  public_deps = [
    ":handler",
    "$dir_pw_tokenizer",
  ]
  public = [
    "assert_public_overrides/pw_assert_backend/assert_backend.h",
    "public/pw_assert_tokenized/assert_tokenized.h",
  ]
}

pw_source_set("assert_backend.impl") {
  public_deps = [ pw_assert_tokenized_HANDLER_BACKEND ]
}

pw_source_set("check_backend") {
  public_configs = [
    ":public_include_path",
    ":check_backend_config",
  ]
  public_deps = [
    ":handler",
    "$dir_pw_log_tokenized",
    "$dir_pw_tokenizer",
  ]
  public = [
    "check_public_overrides/pw_assert_backend/check_backend.h",
    "public/pw_assert_tokenized/check_tokenized.h",
  ]
}

pw_source_set("check_backend.impl") {
  public_deps = [ pw_assert_tokenized_HANDLER_BACKEND ]
}

pw_source_set("pw_assert_tokenized") {
  public_deps = [
    ":assert_backend",
    ":check_backend",
  ]
}

pw_source_set("pw_assert_tokenized.impl") {
  deps = [
    ":assert_backend.impl",
    ":check_backend.impl",
  ]
}

pw_source_set("log_handler") {
  deps = [
    ":handler",
    "$dir_pw_assert:config",
    "$dir_pw_base64",
    "$dir_pw_bytes",
    "$dir_pw_log",
    "$dir_pw_log_tokenized",
    "$dir_pw_span",
  ]
  sources = [ "log_handler.cc" ]
}

pw_doc_group("docs") {
  sources = [ "docs.rst" ]
}

pw_test_group("tests") {
}
