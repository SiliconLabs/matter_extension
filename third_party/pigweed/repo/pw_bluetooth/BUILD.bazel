# Copyright 2022 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_library",
    "pw_cc_test",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_library(
    name = "pw_bluetooth",
    hdrs = [
        "public/pw_bluetooth/address.h",
        "public/pw_bluetooth/assigned_uuids.h",
        "public/pw_bluetooth/constants.h",
        "public/pw_bluetooth/controller.h",
        "public/pw_bluetooth/gatt/client.h",
        "public/pw_bluetooth/gatt/constants.h",
        "public/pw_bluetooth/gatt/error.h",
        "public/pw_bluetooth/gatt/server.h",
        "public/pw_bluetooth/gatt/types.h",
        "public/pw_bluetooth/host.h",
        "public/pw_bluetooth/internal/hex.h",
        "public/pw_bluetooth/internal/raii_ptr.h",
        "public/pw_bluetooth/low_energy/advertising_data.h",
        "public/pw_bluetooth/low_energy/bond_data.h",
        "public/pw_bluetooth/low_energy/central.h",
        "public/pw_bluetooth/low_energy/connection.h",
        "public/pw_bluetooth/low_energy/peripheral.h",
        "public/pw_bluetooth/low_energy/security_mode.h",
        "public/pw_bluetooth/pairing_delegate.h",
        "public/pw_bluetooth/peer.h",
        "public/pw_bluetooth/result.h",
        "public/pw_bluetooth/types.h",
        "public/pw_bluetooth/uuid.h",
        "public/pw_bluetooth/vendor.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_chrono:system_clock",
        "//pw_containers",
        "//pw_function",
        "//pw_status",
        "//pw_string:string",
    ],
)

pw_cc_test(
    name = "address_test",
    srcs = [
        "address_test.cc",
    ],
    deps = [
        ":pw_bluetooth",
    ],
)

pw_cc_test(
    name = "api_test",
    srcs = [
        "api_test.cc",
    ],
    deps = [
        ":pw_bluetooth",
    ],
)

pw_cc_test(
    name = "result_test",
    srcs = [
        "result_test.cc",
    ],
    deps = [
        ":pw_bluetooth",
    ],
)

pw_cc_test(
    name = "uuid_test",
    srcs = [
        "uuid_test.cc",
    ],
    deps = [
        ":pw_bluetooth",
    ],
)

# Bazel support for Emboss has not been configured yet, but we need to satisfy
# presubmit.
filegroup(
    name = "emboss_files",
    srcs = [
        "emboss_test.cc",
        "size_report/make_2_views_and_write.cc",
        "size_report/make_view_and_write.cc",
    ],
)
