# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_library",
)
load(
    "//pw_build/bazel_internal:pigweed_internal.bzl",
    "pw_linker_script",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_linker_script(
    name = "basic_linker_script",
    # These come from
    # https://cs.opensource.google/pigweed/pigweed/+/main:targets/stm32f429i_disc1/target_toolchains.gni
    # TODO(tpudlik): Figure out how to share them between bazel and GN.
    defines = [
        "PW_BOOT_FLASH_BEGIN=0x08000200",
        "PW_BOOT_FLASH_SIZE=1024K",
        "PW_BOOT_HEAP_SIZE=112K",
        "PW_BOOT_MIN_STACK_SIZE=1K",
        "PW_BOOT_RAM_BEGIN=0x20000000",
        "PW_BOOT_RAM_SIZE=192K",
        "PW_BOOT_VECTOR_TABLE_BEGIN=0x08000000",
        "PW_BOOT_VECTOR_TABLE_SIZE=512",
    ],
    linker_script = "//pw_boot_cortex_m:basic_cortex_m.ld",
)

pw_cc_library(
    name = "pre_init",
    srcs = [
        "boot.cc",
        "vector_table.c",
    ],
    defines = [
        "PW_MALLOC_ACTIVE=1",
    ],
    deps = [
        "//pw_boot",
        "//pw_malloc",
        "//pw_preprocessor",
        "//pw_sys_io_baremetal_stm32f429",
    ],
    # TODO(b/251939135): Remove the need for alwayslink by rethinking how
    # pw_boot_cortex_m is structured in the build system.
    alwayslink = 1,
)
