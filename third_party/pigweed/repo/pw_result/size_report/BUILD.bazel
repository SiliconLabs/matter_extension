# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_binary",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_binary(
    name = "pointer_simple",
    srcs = ["pointer_simple.cc"],
    deps = [
        "//pw_log",
        "//pw_result",
    ],
)

pw_cc_binary(
    name = "result_simple",
    srcs = ["result_simple.cc"],
    deps = [
        "//pw_log",
        "//pw_result",
    ],
)

pw_cc_binary(
    name = "pointer_noinline",
    srcs = ["pointer_noinline.cc"],
    deps = [
        "//pw_log",
        "//pw_result",
    ],
)

pw_cc_binary(
    name = "result_noinline",
    srcs = ["result_noinline.cc"],
    deps = [
        "//pw_log",
        "//pw_result",
    ],
)

pw_cc_binary(
    name = "pointer_read",
    srcs = ["pointer_read.cc"],
    deps = [
        "//pw_bytes",
        "//pw_log",
        "//pw_result",
        "//pw_span",
    ],
)

pw_cc_binary(
    name = "result_read",
    srcs = ["result_read.cc"],
    deps = [
        "//pw_bytes",
        "//pw_log",
        "//pw_result",
        "//pw_span",
    ],
)

pw_cc_binary(
    name = "ladder_and_then",
    srcs = ["ladder_and_then.cc"],
    deps = ["//pw_result"],
)

pw_cc_binary(
    name = "monadic_and_then",
    srcs = ["monadic_and_then.cc"],
    deps = ["//pw_result"],
)

pw_cc_binary(
    name = "ladder_or_else",
    srcs = ["ladder_or_else.cc"],
    deps = ["//pw_result"],
)

pw_cc_binary(
    name = "monadic_or_else",
    srcs = ["monadic_or_else.cc"],
    deps = ["//pw_result"],
)

pw_cc_binary(
    name = "ladder_transform",
    srcs = ["ladder_transform.cc"],
    deps = ["//pw_result"],
)

pw_cc_binary(
    name = "monadic_transform",
    srcs = ["monadic_transform.cc"],
    deps = ["//pw_result"],
)
