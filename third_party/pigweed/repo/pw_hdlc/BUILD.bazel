# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_library",
    "pw_cc_test",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_library(
    name = "pw_hdlc",
    srcs = [
        "decoder.cc",
        "encoder.cc",
        "public/pw_hdlc/internal/encoder.h",
        "public/pw_hdlc/internal/protocol.h",
    ],
    hdrs = [
        "public/pw_hdlc/decoder.h",
        "public/pw_hdlc/encoded_size.h",
        "public/pw_hdlc/encoder.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_bytes",
        "//pw_checksum",
        "//pw_log",
        "//pw_result",
        "//pw_span",
        "//pw_status",
        "//pw_stream",
        "//pw_varint",
    ],
)

pw_cc_library(
    name = "rpc_channel_output",
    hdrs = ["public/pw_hdlc/rpc_channel.h"],
    includes = ["public"],
    deps = [
        ":pw_hdlc",
        "//pw_rpc",
        "//pw_span",
    ],
)

pw_cc_library(
    name = "pw_rpc",
    srcs = ["rpc_packets.cc"],
    hdrs = ["public/pw_hdlc/rpc_packets.h"],
    includes = ["public"],
    deps = [
        ":pw_hdlc",
        "//pw_rpc",
    ],
)

pw_cc_library(
    name = "packet_parser",
    srcs = ["wire_packet_parser.cc"],
    hdrs = ["public/pw_hdlc/wire_packet_parser.h"],
    includes = ["public"],
    deps = [
        ":pw_hdlc",
        "//pw_assert",
        "//pw_bytes",
        "//pw_checksum",
        "//pw_router:packet_parser",
    ],
)

# A backend for pw_rpc's `system_server` that sends and receives HDLC-framed RPC
# packets over pw_sys_io.
#
# Warning: This system server is polling and blocking, so it's not
# production-ready. This exists for simplifying initial bringup/testing, and
# should not be used in any performance-sensitive application.
pw_cc_library(
    name = "hdlc_sys_io_system_server",
    srcs = [
        "hdlc_sys_io_system_server.cc",
    ],
    deps = [
        ":pw_rpc",
        ":rpc_channel_output",
        "//pw_log",
        "//pw_rpc/system_server:facade",
        "//pw_stream:sys_io_stream",
    ],
)

pw_cc_test(
    name = "encoder_test",
    srcs = ["encoder_test.cc"],
    deps = [
        ":pw_hdlc",
        "//pw_stream",
        "//pw_unit_test",
    ],
)

pw_cc_test(
    name = "decoder_test",
    srcs = ["decoder_test.cc"],
    deps = [
        ":pw_hdlc",
        "//pw_result",
        "//pw_stream",
        "//pw_unit_test",
    ],
)

pw_cc_test(
    name = "encoded_size_test",
    srcs = ["encoded_size_test.cc"],
    deps = [
        ":pw_hdlc",
        "//pw_bytes",
        "//pw_result",
        "//pw_stream",
        "//pw_unit_test",
        "//pw_varint",
    ],
)

pw_cc_test(
    name = "wire_packet_parser_test",
    srcs = ["wire_packet_parser_test.cc"],
    deps = [
        ":packet_parser",
        "//pw_bytes",
    ],
)

pw_cc_test(
    name = "rpc_channel_test",
    srcs = ["rpc_channel_test.cc"],
    deps = [
        ":pw_hdlc",
        ":rpc_channel_output",
        "//pw_stream",
        "//pw_unit_test",
    ],
)
