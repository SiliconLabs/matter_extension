# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_library",
    "pw_cc_test",
)
load(
    "//pw_build:selects.bzl",
    "TARGET_COMPATIBLE_WITH_HOST_SELECT",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_library(
    name = "pw_multisink",
    srcs = [
        "multisink.cc",
    ],
    hdrs = [
        "public/pw_multisink/config.h",
        "public/pw_multisink/multisink.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_assert",
        "//pw_bytes",
        "//pw_containers",
        "//pw_function",
        "//pw_log",
        "//pw_result",
        "//pw_ring_buffer",
        "//pw_sync:interrupt_spin_lock",
        "//pw_sync:lock_annotations",
        "//pw_sync:mutex",
        "//pw_varint",
    ],
)

pw_cc_library(
    name = "util",
    srcs = ["util.cc"],
    hdrs = ["public/pw_multisink/util.h"],
    includes = ["public"],
    deps = [
        ":pw_multisink",
        "//pw_bytes",
        "//pw_function",
        "//pw_log",
        "//pw_log:log_proto_cc.pwpb",
        "//pw_status",
    ],
)

pw_cc_library(
    name = "test_thread",
    hdrs = ["public/pw_multisink/test_thread.h"],
    includes = ["public"],
    deps = [
        "//pw_thread:thread",
    ],
)

pw_cc_test(
    name = "multisink_test",
    srcs = [
        "multisink_test.cc",
    ],
    deps = [
        ":pw_multisink",
        "//pw_function",
        "//pw_preprocessor",
        "//pw_status",
        "//pw_unit_test",
    ],
)

pw_cc_library(
    name = "multisink_threaded_test",
    srcs = [
        "multisink_threaded_test.cc",
    ],
    deps = [
        ":pw_multisink",
        ":test_thread",
        "//pw_string",
        "//pw_thread:thread",
        "//pw_thread:yield",
        "//pw_unit_test",
    ],
)

pw_cc_library(
    name = "stl_test_thread",
    srcs = [
        "stl_test_thread.cc",
    ],
    target_compatible_with = select(TARGET_COMPATIBLE_WITH_HOST_SELECT),
    deps = [
        ":test_thread",
        "//pw_thread:thread",
        "//pw_thread_stl:thread",
    ],
)

pw_cc_test(
    name = "stl_multisink_threaded_test",
    target_compatible_with = select(TARGET_COMPATIBLE_WITH_HOST_SELECT),
    deps = [
        ":multisink_threaded_test",
        ":stl_test_thread",
    ],
)
