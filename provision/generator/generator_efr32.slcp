project_name: generator
package: platform
quality: production
label: Matter Provisioner Generator
description: >
  Generates the key-pair, and CSR for the DAC
category: Example|Platform
filter:
  - name: "Device Type"
    value: ["SoC"]
  - name: "MCU"
    value: ["32-bit MCU"]
  - name: "Project Difficulty"
    value: ["Beginner"]

source:
  - path: app.cpp
  - path: main.cpp
  - path: nvm3.c

include:
  - path: .
    file_list:
    - path: app.h
  - path: ../../examples/
    file_list:
    - path: platform/silabs/provision/AttestationKey.h
    - path: platform/silabs/provision/AttestationKeyPSA.cpp
    - path: platform/silabs/provision/ProvisionChannel.h
    - path: platform/silabs/provision/ProvisionChannelRTT.cpp
    - path: platform/silabs/provision/ProvisionEncoder.h
    - path: platform/silabs/provision/ProvisionEncoder.cpp
    - path: platform/silabs/provision/ProvisionManager.h
    - path: platform/silabs/provision/ProvisionManager.cpp
    - path: platform/silabs/provision/ProvisionProtocol.h
    - path: platform/silabs/provision/ProvisionProtocolV1.cpp
    - path: platform/silabs/provision/ProvisionProtocolV2.cpp
    - path: platform/silabs/provision/ProvisionStorage.h
    - path: platform/silabs/provision/ProvisionStorageGeneric.h
    - path: platform/silabs/provision/ProvisionStorage.cpp
    - path: platform/silabs/provision/ProvisionStorageCustom.cpp
    - path: platform/silabs/provision/ProvisionStorageDefault.cpp
  - path: ../../examples/platform/silabs/
  - path: ../../src/
    file_list:
    - path: lib/support/Base64.h
    - path: lib/support/Base64.cpp
    - path: lib/support/BytesToHex.h
    - path: lib/support/BytesToHex.cpp
    - path: lib/support/logging/CHIPLogging.h
    - path: lib/support/logging/TextOnlyLogging.cpp
    - path: platform/silabs/SilabsConfig.h
    - path: platform/silabs/SilabsConfig.cpp
    - path: platform/silabs/Logging.cpp
    - path: crypto/CHIPCryptoPALPSA.cpp
    - path: setup_payload/Base38Encode.h
    - path: setup_payload/Base38Encode.cpp
    - path: platform/silabs/multi-ota/OtaTlvEncryptionKey.h
    - path: platform/silabs/multi-ota/OtaTlvEncryptionKey.cpp
  - path: ../../src/include/
  - path: ../../zzz_generated/app-common/
  - path: ../../third_party/nlassert/repo/include/
  - path: ../../third_party/nlio/repo/include/
  - path: ../../third_party/silabs/simplicity_sdk/platform/bootloader/
  - path: ../../third_party/silabs/simplicity_sdk/protocol/bluetooth/config/

component:
  - id: freertos
  - id: sl_system
  - id: device_init
  - id: sleeptimer
  - id: cpp_support
  - id: iostream_rtt
  - id: psa_its
  - id: psa_driver
  - id: psa_crypto
  - id: psa_crypto_ecc_secp256r1
  - id: psa_crypto_sha256
  - id: psa_crypto_ecdsa
  - id: psa_crypto_cipher_ctr
  - id: mbedtls_pkcs5
  - id: mbedtls_ecc
  - id: mbedtls_x509
  - id: bootloader_app_properties

define:
- { name: SL_PROVISION_CHANNEL_ENABLED, value: '1' }
- { name: SILABS_PROVISION_PROTOCOL_V1, value: '0' }
- { name: CHIP_SYSTEM_CONFIG_USE_SOCKETS, value: '1' }
- { name: CHIP_CONFIG_SHA256_CONTEXT_SIZE, value: '256' }
# This is needed to enable the OtaTlvEncryptionKey class
- { name: OTA_ENCRYPTION_ENABLE, value: '1'}

toolchain_settings:
- { option: optimize, value: debug }
- { option: cxx_standard, value: c++17 }
- { option: gcc_compiler_option, value: -Wno-unused-parameter }
